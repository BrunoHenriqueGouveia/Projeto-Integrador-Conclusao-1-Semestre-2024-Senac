/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.100
 * Generated at: 2024-06-03 23:33:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

public final class salvarIngresso_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(7);
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.util.regex.Matcher");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.util.regex.Pattern");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>ingresso</title>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        ");

            String nome, cpf, email, tipo;
            int qtdIngresso;
            double valorTotal;

            int id;
            id = Integer.parseInt(request.getParameter("idEvento"));

            nome = request.getParameter("nome");
            qtdIngresso = Integer.parseInt(request.getParameter("qtdIngresso"));
            cpf = request.getParameter("cpf");
            email = request.getParameter("email");
            tipo = request.getParameter("tipo");
            valorTotal = Double.parseDouble(request.getParameter("valorTotal"));

            String emailIndex = "index.jsp?email=" + email;

            // conecta com banco de dados
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection conectado = DriverManager.getConnection("jdbc:mysql://localhost:3306/diver", "root", "p@$$w0rd");
                
                
                // dependendo do tipo de ingresso ele diminui no banco de dados a quantidade de ingresso do evento
                if (tipo.equalsIgnoreCase("vip")) {
                    PreparedStatement stt = conectado.prepareStatement("UPDATE evento SET qtd_ingresso_vip = qtd_ingresso_vip - ? WHERE id_evento = ?");
                    stt.setInt(1, qtdIngresso);
                    stt.setInt(2, id);
                    stt.executeUpdate();
                } else if (tipo.equalsIgnoreCase("meia")) {
                    PreparedStatement stt = conectado.prepareStatement("UPDATE evento SET qtd_ingresso_meia = qtd_ingresso_meia - ? WHERE id_evento = ?");
                    stt.setInt(1, qtdIngresso);
                    stt.setInt(2, id);
                    stt.executeUpdate();
                } else {
                    PreparedStatement stt = conectado.prepareStatement("UPDATE evento SET qtd_ingresso_inteira = qtd_ingresso_inteira - ? WHERE id_evento = ?");
                    stt.setInt(1, qtdIngresso);
                    stt.setInt(2, id);
                    stt.executeUpdate();
                }

                // insere o ingresso comprado no banco de dados
                PreparedStatement st = conectado.prepareStatement("INSERT INTO ingresso (nome,cpf,email,tipo_ingresso,valor_ingresso,qtdIngresso,fk_evento) values(?,?,?,?,?,?,?)");
                st.setString(1, nome);
                st.setString(2, cpf);
                st.setString(3, email);
                st.setString(4, tipo);
                st.setDouble(5, valorTotal);
                st.setInt(6, qtdIngresso);
                st.setInt(7, id);
                st.executeUpdate();//salvar no banco de dados
        
      out.write("\n");
      out.write("\n");
      out.write("        <script>\n");
      out.write("            alert(\"Compra bem sucedida\");\n");
      out.write("            window.location.href = \"");
      out.print(emailIndex);
      out.write("\";\n");
      out.write("        </script>\n");
      out.write("\n");
      out.write("        ");

            } catch (ClassNotFoundException ex) {
                out.println(ex);
            } catch (SQLException ex) {
                out.println(ex);
            }
        
      out.write("\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
