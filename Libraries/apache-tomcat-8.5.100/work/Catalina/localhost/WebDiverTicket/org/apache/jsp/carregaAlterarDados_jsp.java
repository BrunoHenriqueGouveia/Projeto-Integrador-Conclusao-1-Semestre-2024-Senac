/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.100
 * Generated at: 2024-06-03 23:42:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public final class carregaAlterarDados_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(5);
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <style>\n");
      out.write("            @import url('https://fonts.googleapis.com/css2?family=Joti+One&family=Modak&display=swap');\n");
      out.write("            @import url('https://fonts.googleapis.com/css2?family=Londrina+Solid:wght@100;300;400;900&display=swap');\n");
      out.write("\n");
      out.write("            body{\n");
      out.write("                margin-bottom: 10px;\n");
      out.write("                margin-top: 10px;\n");
      out.write("                display: flex;\n");
      out.write("                flex-direction: column;\n");
      out.write("                align-items: center;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            form {\n");
      out.write("                border: 3px solid #f1f1f1;\n");
      out.write("                font-family: \"Londrina Solid\";\n");
      out.write("                font-size: 22px;\n");
      out.write("                font-style: normal;\n");
      out.write("                font-weight: 400;\n");
      out.write("                line-height: 24px;\n");
      out.write("                color: #074568;\n");
      out.write("            }\n");
      out.write("            input[type=text],\n");
      out.write("            input[type=password],\n");
      out.write("            input[type=number] {\n");
      out.write("                width: 500px;\n");
      out.write("                padding: 12px 20px;\n");
      out.write("                margin: 8px 0;\n");
      out.write("                display: inline-block;\n");
      out.write("                border: 1px solid #ccc;\n");
      out.write("                box-sizing: border-box;\n");
      out.write("            }\n");
      out.write("            .conteudo {\n");
      out.write("                padding: 16px;\n");
      out.write("            }\n");
      out.write("            button {\n");
      out.write("                background-color: #04AA6D;\n");
      out.write("                color: white;\n");
      out.write("                padding: 14px 20px;\n");
      out.write("                margin: 8px 0;\n");
      out.write("                border: none;\n");
      out.write("                cursor: pointer;\n");
      out.write("                width: 100%;\n");
      out.write("                font-family: \"Londrina Solid\";\n");
      out.write("                font-size: 20px;\n");
      out.write("                font-style: normal;\n");
      out.write("                font-weight: 400;\n");
      out.write("                line-height: 24px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            button:hover {\n");
      out.write("                opacity: 0.8;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("        </style>\n");
      out.write("        <title>Alterar</title>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        ");
  // recebe dados do usuario de outra pagina
            String u = request.getParameter("email");

            try {
                // conecta com banco de dados
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection conectado = DriverManager.getConnection("jdbc:mysql://localhost:3306/diver", "root", "p@$$w0rd");
                // busca dados do usuario para fazer alteração
                PreparedStatement st = conectado.prepareStatement("select * from usuario where email = ?");
                st.setString(1, u);
                ResultSet resultado = st.executeQuery();

                // exibi as informações do usuario e deixa ele alterar os dados
                if (resultado.next()) {

        
      out.write("\n");
      out.write("\n");
      out.write("        <form action=\"alterarDados.jsp\" method=\"post\" onsubmit=\"return cadastrarUsuario()\">\n");
      out.write("\n");
      out.write("            <div class=\"conteudo\">\n");
      out.write("                <p>\n");
      out.write("                    <label for=\"nome\"><b>Nome</b></label><br>\n");
      out.write("                    <input type=\"text\" placeholder=\"Insira seu nome completo\" name=\"nome\" id=\"nome\" value=\"");
      out.print(resultado.getString("nome"));
      out.write("\" required>\n");
      out.write("\n");
      out.write("                </p>\n");
      out.write("                <p>\n");
      out.write("                    <label for=\"idade\"><b>idade</b></label><br>\n");
      out.write("                    <input type=\"number\" placeholder=\"Insira sua idade (Maior de 18 anos)\" name=\"idade\" id=\"idade\" value=\"");
      out.print(resultado.getString("idade"));
      out.write("\"\n");
      out.write("                           required>\n");
      out.write("\n");
      out.write("                </p>\n");
      out.write("\n");
      out.write("                <p>\n");
      out.write("\n");
      out.write("                    <label for=\"cpf\"><b>Cpf</b></label><br>\n");
      out.write("                    <input type=\"number\" placeholder=\"Insira seu cpf\" name=\"cpf\" id=\"cpf\" value=\"");
      out.print(resultado.getString("cpf"));
      out.write("\" required>\n");
      out.write("\n");
      out.write("                </p>\n");
      out.write("\n");
      out.write("                <p>\n");
      out.write("\n");
      out.write("                    <label for=\"email\"><b>Email</b></label><br>\n");
      out.write("                    <input type=\"text\" placeholder=\"Insira seu email\" name=\"email\" id=\"email\" value=\"");
      out.print(resultado.getString("email"));
      out.write("\" readonly>\n");
      out.write("\n");
      out.write("                </p>\n");
      out.write("                <p>\n");
      out.write("                    <label for=\"senha\"><b>Senha</b></label><br>\n");
      out.write("                    <input type=\"text\" placeholder=\"Insira senha (min 6 caracteres)\" name=\"senha\" id=\"senha\" value=\"");
      out.print(resultado.getString("senha"));
      out.write("\" required>\n");
      out.write("\n");
      out.write("                </p>\n");
      out.write("\n");
      out.write("                <button type=\"submit\">Salvar Alteração</button>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("        </form>\n");
      out.write("\n");
      out.write("        <!-- =============================================================================================================== -->\n");
      out.write("        <script>\n");
      out.write("            const nomeUsuario = window.document.getElementById('nome');\n");
      out.write("            const idade = document.getElementById('idade');\n");
      out.write("            const cpf = document.getElementById('cpf');\n");
      out.write("            const email = document.getElementById('email');\n");
      out.write("            const senha = window.document.getElementById('senha');\n");
      out.write("            const form = window.document.getElementsByTagName('form');\n");
      out.write("\n");
      out.write("            var regNome = new RegExp(\"[A-z]{3,100}\");\n");
      out.write("            var regEmail = new RegExp(\"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\");\n");
      out.write("            var regCpf = new RegExp(\"[0-9]{11}\");\n");
      out.write("            var regSenha = new RegExp(\"^.{6,}$\");\n");
      out.write("\n");
      out.write("            // valida dados para salvar no banco de dados\n");
      out.write("            function cadastrarUsuario() {\n");
      out.write("                if (validarUsuario()) {\n");
      out.write("                    return true;\n");
      out.write("                } else {\n");
      out.write("                    alert(\"Campo com erro\");\n");
      out.write("                    return false;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("            /* função para validar cliente*/\n");
      out.write("            function validarUsuario() {\n");
      out.write("                if (regNome.test(nomeUsuario.value) && idade.value > 17 && regCpf.test(cpf.value) && regEmail.test(email.value) && regSenha.test(senha.value)) {\n");
      out.write("                    return true;\n");
      out.write("                } else {\n");
      out.write("                    return false;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("        </script>\n");
      out.write("\n");
      out.write("\n");
      out.write("        ");
                    }
            } catch (ClassNotFoundException ex) {// caso de erro
                out.println(ex);
            } catch (SQLException ex) {
                out.println(ex);
            }
        
      out.write("\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
