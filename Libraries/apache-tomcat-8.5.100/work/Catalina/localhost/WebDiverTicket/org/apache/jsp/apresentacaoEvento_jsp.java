/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.100
 * Generated at: 2024-06-03 23:31:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public final class apresentacaoEvento_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(5);
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <style>\n");
      out.write("            @import url('https://fonts.googleapis.com/css2?family=Joti+One&family=Modak&display=swap');\n");
      out.write("            @import url('https://fonts.googleapis.com/css2?family=Londrina+Solid:wght@100;300;400;900&display=swap');\n");
      out.write("\n");
      out.write("\n");
      out.write("            body{\n");
      out.write("                margin-bottom: 10px;\n");
      out.write("                margin-top: 10px;\n");
      out.write("                display: flex;\n");
      out.write("                flex-direction: column;\n");
      out.write("                align-items: center;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            form {\n");
      out.write("                border: 3px solid #f1f1f1;\n");
      out.write("                font-family: \"Londrina Solid\";\n");
      out.write("                font-size: 22px;\n");
      out.write("                font-style: normal;\n");
      out.write("                font-weight: 400;\n");
      out.write("                line-height: 24px;\n");
      out.write("                color: #074568;\n");
      out.write("                margin-bottom: 30px;\n");
      out.write("            }\n");
      out.write("            input[type=text],\n");
      out.write("            input[type=password],\n");
      out.write("            input[type=number] {\n");
      out.write("                width: 500px;\n");
      out.write("                padding: 12px 20px;\n");
      out.write("                margin: 8px 0;\n");
      out.write("                display: inline-block;\n");
      out.write("                border: 1px solid #ccc;\n");
      out.write("                box-sizing: border-box;\n");
      out.write("            }\n");
      out.write("            .conteudo {\n");
      out.write("                padding: 16px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("        </style>\n");
      out.write("        <title>Meus Eventos</title>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        ");

            // recebe dados como email da outra pagina
            String u = request.getParameter("email");

            try {
                // conecta com banco de dados
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection conectado = DriverManager.getConnection("jdbc:mysql://localhost:3306/diver", "root", "p@$$w0rd");
                //busca o evento no banco de dados com a condição do email do dono do evento
                PreparedStatement st = conectado.prepareStatement("select * from evento where email = ?");
                st.setString(1, u);
                ResultSet resultado = st.executeQuery();

                // exibi informações do evento
                while (resultado.next()) {

        
      out.write(" \n");
      out.write("\n");
      out.write("        <form>\n");
      out.write("\n");
      out.write("            <div class=\"conteudo\">\n");
      out.write("\n");
      out.write("                <div style=\"display: none;\">\n");
      out.write("                    <input type=\"text\" name=\"email\" value=\"");
      out.print( u);
      out.write("\">\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <label for=\"nomeDoevento\"><b>Nome Do Evento</b></label><br>\n");
      out.write("                <input type=\"text\" name=\"nomeDoevento\" id=\"nomeDoevento\" value=\"");
      out.print(resultado.getString("nomeDoevento"));
      out.write("\"  readonly><br><br>\n");
      out.write("\n");
      out.write("                <label for=\"local\"><b>Local</b></label><br>\n");
      out.write("                <input type=\"text\" name=\"local\" id=\"local\" value=\"");
      out.print(resultado.getString("local"));
      out.write("\"  readonly><br><br>\n");
      out.write("\n");
      out.write("                <label for=\"endereco\">Endereço</label><br>\n");
      out.write("                <input type=\"text\" name=\"endereco\" id=\"endereco\" value=\"");
      out.print(resultado.getString("endereco"));
      out.write("\"  readonly><br><br>\n");
      out.write("\n");
      out.write("                <label for=\"cep\">CEP</label><br>\n");
      out.write("                <input type=\"text\" name=\"cep\" id=\"cep\" value=\"");
      out.print(resultado.getString("cep"));
      out.write("\"  readonly><br><br>\n");
      out.write("\n");
      out.write("                <label for=\"imagem\">Imagem do Evento:</label><br>\n");
      out.write("                <input type=\"file\" id=\"imagem\" name=\"imagem\"><br><br>\n");
      out.write("\n");
      out.write("                <label for=\"descricao\">Descrição do Evento:</label><br>\n");
      out.write("                <textarea id=\"descricao\" name=\"descricao\" rows=\"4\"  readonly>");
      out.print(resultado.getString("descricao"));
      out.write("</textarea><br><br>\n");
      out.write("\n");
      out.write("                <label for=\"dataInicio\">Data de Início:</label><br>\n");
      out.write("                <input type=\"text\" id=\"dataInicio\" name=\"dataInicio\" value=\"");
      out.print(resultado.getString("data_inicio"));
      out.write("\"  readonly><br><br>\n");
      out.write("\n");
      out.write("                <label for=\"dataFim\">Data de Fim:</label><br>\n");
      out.write("                <input type=\"text\" id=\"dataFim\" name=\"dataFim\" value=\"");
      out.print(resultado.getString("data_fim"));
      out.write("\"  readonly><br><br>\n");
      out.write("\n");
      out.write("                <label for=\"horaInicio\">Hora de Início:</label><br>\n");
      out.write("                <input type=\"text\" id=\"horaInicio\" name=\"horaInicio\" value=\"");
      out.print(resultado.getString("hora_inicio"));
      out.write("\"  readonly><br><br>\n");
      out.write("\n");
      out.write("                <label for=\"horaFim\">Hora de Fim:</label><br>\n");
      out.write("                <input type=\"text\" id=\"horaFim\" name=\"horaFim\" value=\"");
      out.print(resultado.getString("hora_fim"));
      out.write("\"  readonly><br><br>\n");
      out.write("\n");
      out.write("                <label for=\"categoria\">Categoria de Evento:</label><br>\n");
      out.write("                <input type=\"text\" name=\"categoria\" value=\"");
      out.print(resultado.getString("categoria_evento"));
      out.write("\"  readonly><br><br>\n");
      out.write("\n");
      out.write("                <!-- =========================================================== -->\n");
      out.write("\n");
      out.write("\n");
      out.write("                <div class=\"inserirIngressos\" id=\"inserirIngressos\">\n");
      out.write("                    <!--=================== vip===================== -->\n");
      out.write("                    <div id=\"divVip\">\n");
      out.write("                        <p id=\"tituloVip\">Ingresso Vip</p>\n");
      out.write("\n");
      out.write("                        <label for=\"qtdingressoVip\">Quantidade de <br>Ingresso:</label>\n");
      out.write("                        <input type=\"number\" id=\"qtdingressoVip\" name=\"qtdingressoVip\" style=\"width: 130px;\" value=\"");
      out.print(resultado.getInt("qtd_ingresso_vip"));
      out.write("\"  readonly>\n");
      out.write("\n");
      out.write("\n");
      out.write("                        <label for=\"precoVip\">Preço:</label>\n");
      out.write("                        <input type=\"number\" name=\"precoVip\" id=\"precoVip\" style=\"width: 130px;\" value=\"");
      out.print(resultado.getDouble("preco_vip"));
      out.write("\" readonly><br>\n");
      out.write("\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <div id=\"divMeia\">\n");
      out.write("                        <!--=================== meia ===================== -->\n");
      out.write("                        <p id=\"tituloMeia\">Ingresso Meia</p>\n");
      out.write("\n");
      out.write("                        <label for=\"qtdingressoMeia\">Quantidade de <br>Ingresso:</label>\n");
      out.write("                        <input type=\"number\" id=\"qtdingressoMeia\" name=\"qtdingressoMeia\" style=\"width: 130px;\" value=\"");
      out.print(resultado.getInt("qtd_ingresso_meia"));
      out.write("\"  readonly>\n");
      out.write("\n");
      out.write("\n");
      out.write("                        <label for=\"precoMeia\">Preço:</label>\n");
      out.write("                        <input type=\"number\" name=\"precoMeia\" id=\"precoMeia\" style=\"width: 130px;\" value=\"");
      out.print(resultado.getDouble("preco_meia"));
      out.write("\" readonly><br>\n");
      out.write("\n");
      out.write("                    </div>\n");
      out.write("                    <div id=\"divInteiro\">\n");
      out.write("                        <!--=================== inteira ===================== -->\n");
      out.write("                        <p id=\"tituloInteiro\">Ingresso Inteira</p>\n");
      out.write("\n");
      out.write("                        <label for=\"qtdingressoInteira\">Quantidade de <br>Ingresso:</label>\n");
      out.write("                        <input type=\"number\" id=\"qtdingressoInteira\" name=\"qtdingressoInteira\" style=\"width: 130px;\" value=\"");
      out.print(resultado.getInt("qtd_ingresso_inteira"));
      out.write("\"  readonly>\n");
      out.write("\n");
      out.write("\n");
      out.write("                        <label for=\"precoInteiro\">Preço:</label>\n");
      out.write("                        <input type=\"number\" name=\"precoInteiro\" id=\"precoInteiro\" style=\"width: 130px;\" value=\"");
      out.print(resultado.getDouble("preco_inteiro"));
      out.write("\"  readonly><br>\n");
      out.write("\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <!-- ======================================================================================== -->\n");
      out.write("\n");
      out.write("            </div>\n");
      out.write("        </form>\n");
      out.write("\n");
      out.write("        <!-- =============================================================================================================== -->      \n");
      out.write("\n");
      out.write("\n");
      out.write("        ");
                    }
            } catch (ClassNotFoundException ex) {// caso de erro
                out.println(ex);
            } catch (SQLException ex) {
                out.println(ex);
            }
        
      out.write("\n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
