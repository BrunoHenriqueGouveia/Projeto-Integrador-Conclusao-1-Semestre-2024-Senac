/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.100
 * Generated at: 2024-06-03 21:48:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

public final class eventoExpecifico_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(7);
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.util.regex.Matcher");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.util.regex.Pattern");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html lang=\"en\">\n");
      out.write("\n");
      out.write("    <head>\n");
      out.write("        <meta charset=\"UTF-8\">\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"styleEventoExpecifico.css\">\n");
      out.write("\n");
      out.write("        <title>Evento</title>\n");
      out.write("    </head>\n");
      out.write("\n");
      out.write("    <body>\n");
      out.write("\n");
      out.write("\n");
      out.write("        ");


            // recebe id do evento 
            int id;
            id = Integer.parseInt(request.getParameter("idEvento"));

            //  conectar com banco de dados
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection conectado = DriverManager.getConnection("jdbc:mysql://localhost:3306/diver", "root", "p@$$w0rd");
                // busca o evento selecionado atraves do id do evento
                PreparedStatement st = conectado.prepareStatement("select * from evento where id_evento = ?");
                st.setInt(1, id);
                ResultSet resultado = st.executeQuery();//executa o select(busca)

                // exibi as informaçoes do evento e deixa ele seleciona a qtd de ingressos 
                if (resultado.next()) {
                    String email = "index.jsp?email=";

        
      out.write("\n");
      out.write("\n");
      out.write("        <!-- ==========================================cabeçalho==========================================-->\n");
      out.write("        <header>\n");
      out.write("            <!--logo-->\n");
      out.write("            <a href=\"");
      out.print( email);
      out.write("\" class=\"logo\"> Diver<br />Ticket<br /> </a>\n");
      out.write("            <!--botoes header-->\n");
      out.write("        </header>\n");
      out.write("\n");
      out.write("        <!---------------------------------------------------------------------------->\n");
      out.write("        <main>\n");
      out.write("\n");
      out.write("            <!--TITULO DA IMAGEM-->\n");
      out.write("            <div class=\"tituloImag\">\n");
      out.write("                <img src=\"imgs/");
      out.print(resultado.getString("imagem"));
      out.write("\" alt=\"BH STOCK FESTIVAL\">\n");
      out.write("                <h2>");
      out.print(resultado.getString("nomeDoEvento"));
      out.write("</h2>\n");
      out.write("\n");
      out.write("                <!--TITULO DA DATA-->\n");
      out.write("                <div class=\"tituloData\">\n");
      out.write("                    <h3>");
      out.print(resultado.getString("data_inicio"));
      out.write(' ');
      out.write('•');
      out.write(' ');
      out.print(resultado.getString("hora_inicio"));
      out.write("  >  ");
      out.print(resultado.getString("data_fim"));
      out.write(' ');
      out.write('•');
      out.write(' ');
      out.print(resultado.getString("hora_fim"));
      out.write("</h3>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <!--TITULO DA LOCAL-->\n");
      out.write("                <div class=\"tituloEnder\">\n");
      out.write("                    <h3>");
      out.print(resultado.getString("local"));
      out.write(" <br> endereço: ");
      out.print(resultado.getString("endereco"));
      out.write(", cep: ");
      out.print(resultado.getString("cep"));
      out.write("</h3>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <!--DESCRIÇÃO DO EVENTO-->\n");
      out.write("                <div class=\"descriEvento\">\n");
      out.write("                    <h2>Descrição do evento</h2>\n");
      out.write("                    <p>");
      out.print(resultado.getString("descricao"));
      out.write("</p>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <div class=\"conteudo\">\n");
      out.write("                ");

                    // pegando os ingresso do banco de dados e colocando nas variaveis
                    int qtdVip = resultado.getInt("qtd_ingresso_vip");
                    double precoVip = resultado.getDouble("preco_vip");

                    int qtdMeia = resultado.getInt("qtd_ingresso_meia");
                    double precoMeia = resultado.getDouble("preco_meia");

                    int qtdInteiro = resultado.getInt("qtd_ingresso_inteira");
                    double precoInteiro = resultado.getDouble("preco_inteiro");

                    // variavel para ir a pagina de pagemento
                    String pagar = "pagamento.jsp?idEvento=" + id;


                
      out.write("\n");
      out.write("                <h2>INGRESSOS</h2>\n");
      out.write("\n");
      out.write("                <div id=\"inteiro\">\n");
      out.write("                    <!--INFORMAÇÃO DO INGRESSO INTEIRA-->\n");
      out.write("                    <label for=\"inteira\">INTEIRA</label>\n");
      out.write("                    <label for=\"preco\">R$ ");
      out.print(precoInteiro);
      out.write("</label>\n");
      out.write("                    <!--BOTÃO DE CONTAGEM-->\n");
      out.write("                    <div class=\"counter-container\">\n");
      out.write("                        <button class=\"counter-btn\" id=\"decrease\">-</button>\n");
      out.write("                        <span id=\"counter-value-inteira\">0</span>\n");
      out.write("                        <button class=\"counter-btn\" id=\"increase\" onclick=\"ingresso('1')\">+</button>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <!-------------------------------------------------------------------------------->\n");
      out.write("                <div id=\"meia\">\n");
      out.write("                    <!--INFORMAÇÃO DO INGRESSO MEIA-->\n");
      out.write("                    <label for=\"meia\">MEIA ENTRADA</label>\n");
      out.write("                    <label for=\"preco\">R$ ");
      out.print(precoMeia);
      out.write("</label>\n");
      out.write("                    <!--BOTÃO DE CONTAGEM-->\n");
      out.write("                    <div class=\"counter-container\">\n");
      out.write("                        <button class=\"counter-btn\" id=\"decrease\">-</button>\n");
      out.write("                        <span id=\"counter-value-meia\">0</span>\n");
      out.write("                        <button class=\"counter-btn\" id=\"increase\" onclick=\"ingresso('2')\">+</button>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <!-------------------------------------------------------------------------------->\n");
      out.write("\n");
      out.write("                <div id=\"vip\">\n");
      out.write("                    <!--INFORMAÇÃO DO INGRESSO VIP-->\n");
      out.write("                    <label for=\"vip\">VIP</label>\n");
      out.write("                    <label for=\"preco\">R$ ");
      out.print(precoVip);
      out.write("</label>\n");
      out.write("                    <!--BOTÃO DE CONTAGEM-->\n");
      out.write("                    <div class=\"counter-container \">\n");
      out.write("                        <button class=\"counter-btn\" id=\"decrease\">-</button>\n");
      out.write("                        <span id=\"counter-value-vip\">0</span>\n");
      out.write("                        <button class=\"counter-btn\" id=\"increase\" onclick=\"ingresso('3')\">+</button>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <!--SOMA TOTAL DE INGRESSO ESCOLIDO-->\n");
      out.write("                <h3>Preço total dos ingressos: <span id=\"total-price\">R$ 0,00</span></h3>\n");
      out.write("\n");
      out.write("                <!--TOTAL DE INGRESSO ESCOLIDO-->\n");
      out.write("                <h3 >Total de ingressos: <span id=\"total-tickets\">0</span></h3>\n");
      out.write("\n");
      out.write("                <!--------------------------------------------------------------------------------------------->\n");
      out.write("                <!--BOTÃO PAGAR-->\n");
      out.write("                <button class=\"button button2\" onclick=\"ingresso('4')\">Pagar</button>\n");
      out.write("                <!-------------------------------------------------------------------------------->\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <!--------------------------------------------------------------------------------------------->\n");
      out.write("            <!--JS PARA ATULIAZR O TOTAL DE INGRESSO ESCOLIDO  E PREÇO TOTAL-->\n");
      out.write("            <script>\n");
      out.write("                const meia = document.getElementById('meia');\n");
      out.write("                const vip = document.getElementById('vip');\n");
      out.write("                const inteiro = document.getElementById('inteiro');\n");
      out.write("                const spanVip = vip.querySelector('span');\n");
      out.write("                const valueVip = spanVip.textContent;\n");
      out.write("                const spanMeia = meia.querySelector('span');\n");
      out.write("                const valueMeia = spanMeia.textContent;\n");
      out.write("                const spanInteira = vip.querySelector('span');\n");
      out.write("                const valueInteira = spanInteira.textContent;\n");
      out.write("\n");
      out.write("                // Elementos para exibir o total de ingressos e o preço total\n");
      out.write("                const totalTicketsElement = document.getElementById('total-tickets');\n");
      out.write("                const totalPriceElement = document.getElementById('total-price');\n");
      out.write("                const ticketOptions = document.querySelectorAll('.counter-container');\n");
      out.write("                const maxTickets = 3; // Limite de ingressos\n");
      out.write("                let valorTotal = 0.00;\n");
      out.write("                let totalIngresso = 0;\n");
      out.write("                let tipo = \"\";\n");
      out.write("\n");
      out.write("                // Preços dos ingressos\n");
      out.write("                const ticketPrices = {\n");
      out.write("                    inteira: ");
      out.print(precoInteiro);
      out.write(",\n");
      out.write("                    meia: ");
      out.print(precoMeia);
      out.write(",\n");
      out.write("                    vip: ");
      out.print(precoVip);
      out.write("\n");
      out.write("                };\n");
      out.write("\n");
      out.write("\n");
      out.write("                //vip mostar as opções de ingresso conforme o usuario criou o evento\n");
      out.write("                ");

                    if (qtdVip <= 0 || precoVip <= 0) {
                
      out.write("\n");
      out.write("                vip.style.display = \"none\";\n");
      out.write("                ");

                    }
                
      out.write("\n");
      out.write("\n");
      out.write("                //meia mostar as opções de ingresso conforme o usuario criou o evento   \n");
      out.write("                ");

                    if (qtdMeia <= 0 || precoMeia <= 0) {
                
      out.write("\n");
      out.write("                meia.style.display = \"none\";\n");
      out.write("                ");

                    }
                
      out.write("\n");
      out.write("\n");
      out.write("                //inteira mostar as opções de ingresso conforme o usuario criou o evento\n");
      out.write("                ");

                    if (qtdInteiro <= 0 || precoInteiro <= 0) {
                
      out.write("\n");
      out.write("                inteiro.style.display = \"none\";\n");
      out.write("                ");

                    }
                
      out.write("\n");
      out.write("\n");
      out.write("                // função para exibir os botoes de ingresso\n");
      out.write("                ticketOptions.forEach((option, index) => {\n");
      out.write("                    const increaseButton = option.querySelector('.counter-btn[id=\"increase\"]');\n");
      out.write("                    const decreaseButton = option.querySelector('.counter-btn[id=\"decrease\"]');\n");
      out.write("                    let counterValue;\n");
      out.write("                    // Definindo o contador de acordo com o tipo de ingresso\n");
      out.write("                    if (index === 0) {\n");
      out.write("\n");
      out.write("                        counterValue = option.querySelector('#counter-value-inteira');\n");
      out.write("                    } else if (index === 1) {\n");
      out.write("\n");
      out.write("                        counterValue = option.querySelector('#counter-value-meia');\n");
      out.write("                    } else {\n");
      out.write("\n");
      out.write("                        counterValue = option.querySelector('#counter-value-vip');\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    increaseButton.addEventListener('click', function () {\n");
      out.write("                        let currentValue = parseInt(counterValue.textContent);\n");
      out.write("                        if (currentValue < maxTickets) {\n");
      out.write("                            counterValue.textContent = currentValue + 1;\n");
      out.write("                        }\n");
      out.write("                        // Ocultar as outras opções de ingresso\n");
      out.write("                        ticketOptions.forEach((otherOption, otherIndex) => {\n");
      out.write("                            if (otherIndex !== index) {\n");
      out.write("                                otherOption.style.display = 'none';\n");
      out.write("                            }\n");
      out.write("                        });\n");
      out.write("                        updateTotalTickets();\n");
      out.write("                        updateTotalPrice();\n");
      out.write("                    });\n");
      out.write("                    decreaseButton.addEventListener('click', function () {\n");
      out.write("                        let currentValue = parseInt(counterValue.textContent);\n");
      out.write("                        if (currentValue > 0) {\n");
      out.write("                            counterValue.textContent = currentValue - 1;\n");
      out.write("                        }\n");
      out.write("                        // Mostrar as outras opções de ingresso se a contagem for 0\n");
      out.write("                        if (currentValue - 1 === 0) {\n");
      out.write("                            ticketOptions.forEach((otherOption) => {\n");
      out.write("                                otherOption.style.display = 'block';\n");
      out.write("                            });\n");
      out.write("                        }\n");
      out.write("                        updateTotalTickets();\n");
      out.write("                        updateTotalPrice();\n");
      out.write("                    });\n");
      out.write("                });\n");
      out.write("\n");
      out.write("                //função para saber o total de ingressos selecionados\n");
      out.write("                function updateTotalTickets() {\n");
      out.write("\n");
      out.write("                    let totalTickets = 0;\n");
      out.write("                    // Calcular o total de ingressos\n");
      out.write("                    ticketOptions.forEach((option, index) => {\n");
      out.write("                        let counterValue;\n");
      out.write("                        if (index === 0) {\n");
      out.write("                            counterValue = option.querySelector('#counter-value-inteira');\n");
      out.write("                        } else if (index === 1) {\n");
      out.write("                            counterValue = option.querySelector('#counter-value-meia');\n");
      out.write("                        } else {\n");
      out.write("                            counterValue = option.querySelector('#counter-value-vip');\n");
      out.write("                        }\n");
      out.write("                        totalTickets += parseInt(counterValue.textContent);\n");
      out.write("                    });\n");
      out.write("                    // Atualizar o total de ingressos\n");
      out.write("                    totalTicketsElement.textContent = totalTickets;\n");
      out.write("                    totalIngresso = totalTickets;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("\n");
      out.write("                // função para saber o valor total dos ingressos\n");
      out.write("                function updateTotalPrice() {\n");
      out.write("\n");
      out.write("                    let totalPrice = 0.00;\n");
      out.write("                    // Calcular o preço total\n");
      out.write("                    ticketOptions.forEach((option, index) => {\n");
      out.write("                        let counterValue;\n");
      out.write("                        if (index === 0) {\n");
      out.write("                            counterValue = option.querySelector('#counter-value-inteira');\n");
      out.write("                            totalPrice += parseInt(counterValue.textContent) * ticketPrices.inteira;\n");
      out.write("                        } else if (index === 1) {\n");
      out.write("                            counterValue = option.querySelector('#counter-value-meia');\n");
      out.write("                            totalPrice += parseInt(counterValue.textContent) * ticketPrices.meia;\n");
      out.write("                        } else {\n");
      out.write("                            counterValue = option.querySelector('#counter-value-vip');\n");
      out.write("                            totalPrice += parseInt(counterValue.textContent) * ticketPrices.vip;\n");
      out.write("                        }\n");
      out.write("                    });\n");
      out.write("                    // Atualizar o preço total dos ingressos\n");
      out.write("                    totalPriceElement.textContent = 'R$ ' + totalPrice.toFixed(2);\n");
      out.write("                    valorTotal = totalPrice;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                //função para validar se foi selecionado algum ingresso e validar se tem a qtd de ingresso desejada pelo usuario\n");
      out.write("                // se tiver td certo o ingresso é salvo no banco de dados\n");
      out.write("                function ingresso(idCiclo) {\n");
      out.write("\n");
      out.write("                    if (idCiclo === '1') {\n");
      out.write("                        tipo = 'inteira';\n");
      out.write("                    } else if (idCiclo === '2') {\n");
      out.write("                        tipo = 'meia';\n");
      out.write("                    } else if (idCiclo === '3') {\n");
      out.write("                        tipo = 'vip';\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    if (idCiclo === '4') {\n");
      out.write("                        let qtdVip = ");
      out.print( qtdVip);
      out.write(";\n");
      out.write("                        let qtdMeia = ");
      out.print( qtdMeia);
      out.write(";\n");
      out.write("                        let qtdInteiro = ");
      out.print( qtdInteiro);
      out.write(";\n");
      out.write("                        if (totalIngresso > 0) {\n");
      out.write("\n");
      out.write("                            if (tipo === 'vip') {\n");
      out.write("                                if (totalIngresso <= qtdVip) {\n");
      out.write("                                    window.location.href = \"");
      out.print(pagar);
      out.write("\" + \";\" + tipo + \";\" + totalIngresso + \";\" + valorTotal;\n");
      out.write("                                } else {\n");
      out.write("                                    alert(\"tem apenas \" + qtdVip + \" ingresso Vip\");\n");
      out.write("                                }\n");
      out.write("                            } else if (tipo === 'meia') {\n");
      out.write("                                if (totalIngresso <= qtdMeia) {\n");
      out.write("                                    window.location.href = \"");
      out.print(pagar);
      out.write("\" + \";\" + tipo + \";\" + totalIngresso + \";\" + valorTotal;\n");
      out.write("                                } else {\n");
      out.write("                                    alert(\"tem apenas \" + qtdMeia + \" ingresso Meia\");\n");
      out.write("                                }\n");
      out.write("                            } else if (tipo === 'inteira') {\n");
      out.write("                                if (totalIngresso <= qtdInteiro) {\n");
      out.write("                                    window.location.href = \"");
      out.print(pagar);
      out.write("\" + \";\" + tipo + \";\" + totalIngresso + \";\" + valorTotal;\n");
      out.write("                                } else {\n");
      out.write("                                    alert(\"tem apenas \" + qtdInteiro + \" ingresso Inteiro\");\n");
      out.write("                                }\n");
      out.write("                            }\n");
      out.write("\n");
      out.write("                        } else {\n");
      out.write("                            alert(\"Não selecionou ingresso\");\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("            </script>\n");
      out.write("            <!--------------------------------------------------------------------------------------------->\n");
      out.write("            ");
                    } else {
                        out.println("evento não encontrado");
                    }

                } catch (ClassNotFoundException ex) {
                    out.print(ex);

                } catch (SQLException ex) {
                    out.print(ex);

                }
            
      out.write("\n");
      out.write("        </main>\n");
      out.write("        <!-- =============================================================================================================== -->\n");
      out.write("        <!--footer-->\n");
      out.write("        <footer>\n");
      out.write("            <!--links-->\n");
      out.write("            <a class=\"link\">termo de uso</a>\n");
      out.write("            <a class=\"link\">Política de privacidade</a>\n");
      out.write("            <a class=\"link\">Política de reembolso</a>\n");
      out.write("            <!--logo em rodape-->\n");
      out.write("            <a href=\"index.jsp\" class=\"logo-rodape\"> Diver<br />Ticket<br /></a>\n");
      out.write("            <a class=\"link\">Perguntas Frequente</a>\n");
      out.write("            <a class=\"link\">Informação de contatos</a>\n");
      out.write("            <a class=\"link\">Sobre Nos</a>\n");
      out.write("        </footer>\n");
      out.write("        <!-- =============================================================================================================== -->\n");
      out.write("    </body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
